{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/demo/demo.component.ts","./src/app/demo/demo.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/demo.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {DemoComponent} from \"./demo/demo.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'demo',\n    component: DemoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clientApp';\n  items: MenuItem[];\n\n  ngOnInit() {\n    this.items = [\n      {label: 'Home', icon: 'pi pi-fw pi-home', routerLink: '/'},\n      {label: 'Demo', icon: 'pi pi-fw pi-cog', routerLink: '/demo'},\n      {label: 'Edit', icon: 'pi pi-fw pi-pencil'},\n      {label: 'Documentation', icon: 'pi pi-fw pi-file'},\n      {label: 'Settings', icon: 'pi pi-fw pi-cog'}\n    ];\n  }\n}\n","<div class=\"p-grid\">\n  <div class=\"p-col-4\">\n    <span>File Ripper</span>\n  </div>\n  <div class=\"p-col-8\">\n    <p-tabMenu [model]=\"items\" [styleClass]=\"'tab-menu'\" [activeItem]=\"items[0]\"></p-tabMenu>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TabMenuModule} from \"primeng/tabmenu\";\nimport {HomeComponent} from './home/home.component';\nimport {DemoComponent} from './demo/demo.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgxJsonViewerModule} from \"ngx-json-viewer\";\nimport {DropdownModule} from \"primeng/dropdown\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {DemoService} from \"./services/demo.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DemoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    TabMenuModule,\n    NoopAnimationsModule,\n    NgxJsonViewerModule,\n    DropdownModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    DemoService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {DemoService} from \"../services/demo.service\";\nimport {FileType} from \"../domain/file-type\";\nimport {FileDefinition} from \"../domain/file-definition\";\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n  data: any;\n  fileTypes: FileType[];\n  fileDefinition: FileDefinition;\n\n  constructor(private demoService: DemoService) { }\n\n  ngOnInit() {\n    this.demoService.getFileTypes().subscribe(fileTypes => {\n      console.log(fileTypes)\n      this.fileTypes = fileTypes;\n    });\n\n    this.data = {\n      \"yourData\": \"Your data will display here\",\n      \"dataElements\": [\n        {\n          \"name\": \"item 1\",\n          \"value\": \"value 1\"\n        },\n        {\n          \"name\": \"item 2\",\n          \"value\": \"value 2\"\n        },\n        {\n          \"name\": \"item 3\",\n          \"value\": \"value 3\"\n        }\n      ]\n    }\n  }\n}\n","<div class=\"p-grid root\">\n  <div class=\"p-col-6\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-6 red\">\n        <div class=\"p-grid input-group\">\n          <div class=\"p-col-12 no-pad-bottom\">\n            <label for=\"file-type\">File Type:</label>\n          </div>\n          <div class=\"p-col-12 no-pad-top\">\n            <p-dropdown id=\"file-type\" [options]=\"fileTypes\"\n                        [(ngModel)]=\"fileDefinition.fileType\"\n                        optionLabel=\"name\"\n                        optionValue=\"value\"\n                        placeholder=\"Select File Type:\"\n                        [showClear]=\"true\">\n            </p-dropdown>\n          </div>\n        </div>\n      </div>\n      <div class=\"p-col-6 blue\">\n\n      </div>\n    </div>\n  </div>\n  <div class=\"p-col-6 lighter\">\n    <ngx-json-viewer [json]=\"data\"></ngx-json-viewer>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-grid root\">\n  <div class=\"p-col-2\"></div>\n  <div class=\"p-col-8\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-3 center\">\n        <span>\n          <i class=\"pi pi-copy image\"></i>\n        </span>\n      </div>\n      <div class=\"p-col-6 center\">\n        <span>\n          <i class=\"pi pi-arrow-right image-smaller\"></i>\n        </span>\n      </div>\n      <div class=\"p-col-3 center\">\n        <span>\n          <i class=\"pi pi-download image\"></i>\n        </span>\n      </div>\n      <div class=\"p-col-12 center\">\n        <p>\n          File-ripper is a lightweight library for tearing into your text files and unleashing the data inside. With\n          file-ripper, you're in control of reading your files. You define the format of your files via file-ripper's convenient\n          FileDefinition and FieldDefinition interfaces. You decide how to persist your file configurations for use, and you\n          decide how to use your data once it is returned. File-ripper supports fixed-width, character delimited, and XML formats.\n          Your data is returned in a simple format that can easily be converted to JSON for submitting to a REST API.\n          Optionally, you can specify an object builder function to have your data returned in the data type of your choice.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-col-2\"></div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {FileType} from \"../domain/file-type\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemoService {\n  constructor(private httpClient: HttpClient) { }\n\n  getFileTypes: () => Observable<FileType[]> = () => {\n    console.log(`calling backend at ${environment.apiBaseUrl}/api/file-types`)\n    return this.httpClient.get<FileType[]>(`${environment.apiBaseUrl}/api/file-types`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: \"http://localhost:8080\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}