{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/demo/demo.component.ts","webpack:///src/app/demo/demo.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/demo.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","items","label","icon","routerLink","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DemoComponent","demoService","getFileTypes","subscribe","fileTypes","console","log","data","HomeComponent","DemoService","httpClient","apiBaseUrl","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomeComponent} from \"./home/home.component\";\nimport {DemoComponent} from \"./demo/demo.component\";\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'demo',\n    component: DemoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport {MenuItem} from \"primeng/api\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clientApp';\n  items: MenuItem[];\n\n  ngOnInit() {\n    this.items = [\n      {label: 'Home', icon: 'pi pi-fw pi-home', routerLink: '/'},\n      {label: 'Demo', icon: 'pi pi-fw pi-cog', routerLink: '/demo'},\n      {label: 'Edit', icon: 'pi pi-fw pi-pencil'},\n      {label: 'Documentation', icon: 'pi pi-fw pi-file'},\n      {label: 'Settings', icon: 'pi pi-fw pi-cog'}\n    ];\n  }\n}\n","<div class=\"p-grid\">\n  <div class=\"p-col-4\">\n    <span>File Ripper</span>\n  </div>\n  <div class=\"p-col-8\">\n    <p-tabMenu [model]=\"items\" [styleClass]=\"'tab-menu'\" [activeItem]=\"items[0]\"></p-tabMenu>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TabMenuModule} from \"primeng/tabmenu\";\nimport {HomeComponent} from './home/home.component';\nimport {DemoComponent} from './demo/demo.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {NgxJsonViewerModule} from \"ngx-json-viewer\";\nimport {DropdownModule} from \"primeng/dropdown\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {FormsModule} from \"@angular/forms\";\nimport {DemoService} from \"./services/demo.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DemoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    TabMenuModule,\n    NoopAnimationsModule,\n    NgxJsonViewerModule,\n    DropdownModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    DemoService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {DemoService} from \"../services/demo.service\";\nimport {FileType} from \"../domain/file-type\";\nimport {FileDefinition} from \"../domain/file-definition\";\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n  data: any;\n  fileTypes: FileType[];\n  fileDefinition: FileDefinition;\n\n  constructor(private demoService: DemoService) { }\n\n  ngOnInit() {\n    this.demoService.getFileTypes().subscribe(fileTypes => {\n      console.log(fileTypes)\n      this.fileTypes = fileTypes;\n    });\n\n    this.data = {\n      \"yourData\": \"Your data will display here\",\n      \"dataElements\": [\n        {\n          \"name\": \"item 1\",\n          \"value\": \"value 1\"\n        },\n        {\n          \"name\": \"item 2\",\n          \"value\": \"value 2\"\n        },\n        {\n          \"name\": \"item 3\",\n          \"value\": \"value 3\"\n        }\n      ]\n    }\n  }\n}\n","<div class=\"p-grid root\">\n  <div class=\"p-col-6\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-6 red\">\n        <div class=\"p-grid input-group\">\n          <div class=\"p-col-12 no-pad-bottom\">\n            <label for=\"file-type\">File Type:</label>\n          </div>\n          <div class=\"p-col-12 no-pad-top\">\n            <p-dropdown id=\"file-type\" [options]=\"fileTypes\"\n                        [(ngModel)]=\"fileDefinition.fileType\"\n                        optionLabel=\"name\"\n                        optionValue=\"value\"\n                        placeholder=\"Select File Type:\"\n                        [showClear]=\"true\">\n            </p-dropdown>\n          </div>\n        </div>\n      </div>\n      <div class=\"p-col-6 blue\">\n\n      </div>\n    </div>\n  </div>\n  <div class=\"p-col-6 lighter\">\n    <ngx-json-viewer [json]=\"data\"></ngx-json-viewer>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"p-grid root\">\n  <div class=\"p-col-2\"></div>\n  <div class=\"p-col-8\">\n    <div class=\"p-grid\">\n      <div class=\"p-col-3 center\">\n        <span>\n          <i class=\"pi pi-copy image\"></i>\n        </span>\n      </div>\n      <div class=\"p-col-6 center\">\n        <span>\n          <i class=\"pi pi-arrow-right image-smaller\"></i>\n        </span>\n      </div>\n      <div class=\"p-col-3 center\">\n        <span>\n          <i class=\"pi pi-download image\"></i>\n        </span>\n      </div>\n      <div class=\"p-col-12 center\">\n        <p>\n          File-ripper is a lightweight library for tearing into your text files and unleashing the data inside. With\n          file-ripper, you're in control of reading your files. You define the format of your files via file-ripper's convenient\n          FileDefinition and FieldDefinition interfaces. You decide how to persist your file configurations for use, and you\n          decide how to use your data once it is returned. File-ripper supports fixed-width, character delimited, and XML formats.\n          Your data is returned in a simple format that can easily be converted to JSON for submitting to a REST API.\n          Optionally, you can specify an object builder function to have your data returned in the data type of your choice.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-col-2\"></div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\nimport {FileType} from \"../domain/file-type\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemoService {\n  constructor(private httpClient: HttpClient) { }\n\n  getFileTypes: () => Observable<FileType[]> = () => {\n    console.log(`calling backend at ${environment.apiBaseUrl}/api/file-types`)\n    return this.httpClient.get<FileType[]>(`${environment.apiBaseUrl}/api/file-types`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: \"http://localhost:8080\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}